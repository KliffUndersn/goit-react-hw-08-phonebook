{"version":3,"sources":["components/Navbar/NavbarMenu/NavbarMenu.module.css","components/LoginForm/LoginForm.module.css","components/RegisterForm/RegisterForm.module.css","components/Navbar/Navbar.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/auth/authActions.js","redux/auth/authReducer.js","redux/rootReducer.js","redux/store.js","shared/services/api.js","redux/contacts/contactsOperations.js","components/InputForm/ContactList/ContactList.js","components/InputForm/inputForm/fields.js","components/InputForm/inputForm/InputForm.js","components/LoginForm/fields.js","components/LoginForm/initialState.js","components/LoginForm/LoginForm.js","redux/auth/authOperations.js","components/RegisterForm/fields.js","components/RegisterForm/initialState.js","components/RegisterForm/RegisterForm.js","Routes.js","components/Navbar/NavbarMenu/items.js","components/Navbar/NavbarMenu/NavbarMenu.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["module","exports","filterContact","createAction","getContactRequest","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","itemsReducer","createReducer","filter","items","_","payload","state","e","id","contactsReducer","combineReducers","userRegisterRequest","userRegisterSuccess","userRegisterError","userLoginRequest","userLoginSuccess","userLoginError","userLogOutSuccess","userRefreshSuccess","userRefreshError","iS","token","user","email","name","userReducer","isAuthReducer","userPersistConfig","key","version","storage","whitelist","persistedUserReducer","persistReducer","authReducer","isAuth","rootReducer","contacts","auth","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","instance","axios","create","baseURL","defaults","headers","common","Authorization","fetchAllContacts","a","get","data","console","log","fetchAddContact","contact","post","fetchRemoveContact","delete","fetchGetCurrent","getState","fetchPostSignup","fetchPostLogin","fetchPostLogout","getContact","actionFunc","dispatch","api","addContact","newContact","removeContact","ContactList","useSelector","filterContacts","toLowerCase","includes","useDispatch","map","number","onClick","fields","type","pattern","title","required","InputForm","useState","setState","useEffect","handleChange","target","value","onSubmit","preventDefault","newName","alert","onChange","placeholder","initialState","password","LoginForm","setData","handleUserAuth","dataUser","userData","then","catch","err","message","className","styles","form","RegisterForm","Routes","exact","path","nanoid","to","text","NavbarMenu","menuElements","activeClassName","activeLink","link","menu","Navbar","row","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba76c359.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavbarMenu_menu__30d7D\",\"link\":\"NavbarMenu_link__1sJom\",\"activeLink\":\"NavbarMenu_activeLink__1yVqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2dHBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterForm_form__2a0by\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Navbar_row__1Dg6N\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const deleteContact = createAction('contacts/delete');\r\n// export const addContact = createAction('contacts/add');\r\nexport const filterContact = createAction('contacts/filter');\r\n\r\nexport const getContactRequest = createAction('contacts/getRequest');\r\nexport const getContactSuccess = createAction('contacts/getSuccess');\r\nexport const getContactError = createAction('contacts/getError');\r\n\r\nexport const addContactRequest = createAction('contacts/addRequest');\r\nexport const addContactSuccess = createAction('contacts/addSuccess');\r\nexport const addContactError = createAction('contacts/addError');\r\n\r\nexport const removeContactRequest = createAction('contacts/removeRequest');\r\nexport const removeContactSuccess = createAction('contacts/removeSuccess');\r\nexport const removeContactError = createAction('contacts/removeError');\r\n","import {\r\n  configureStore,\r\n  createReducer,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  filterContact,\r\n} from './contactsActions';\r\n\r\nconst initialStore = {\r\n  filter: '',\r\n  items: [],\r\n};\r\n\r\nconst itemsReducer = createReducer(initialStore, {\r\n  [getContactSuccess]: (_, { payload }) => {\r\n    return { filter: '', items: payload };\r\n  },\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return { filter: state.filter, items: [...state.items, payload] };\r\n  },\r\n  [removeContactSuccess]: (state, { payload }) => {\r\n    return {\r\n      filter: state.filter,\r\n      items: state.items.filter(e => e.id !== payload),\r\n    };\r\n  },\r\n  [filterContact]: (state, { payload }) => {\r\n    return { filter: payload, items: [...state.items] };\r\n  },\r\n});\r\n\r\nconst contactsReducer = combineReducers({ items: itemsReducer });\r\nexport default contactsReducer;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const userRegisterRequest = createAction('auth/userRegisterRequest');\r\nexport const userRegisterSuccess = createAction('auth/userRegisterSuccess');\r\nexport const userRegisterError = createAction('auth/userRegisterError');\r\n\r\nexport const userLoginRequest = createAction('auth/userLoginRequest');\r\nexport const userLoginSuccess = createAction('auth/userLoginSuccess');\r\nexport const userLoginError = createAction('auth/userLoginError');\r\n\r\nexport const userLogOutRequest = createAction('auth/userLogOutRequest');\r\nexport const userLogOutSuccess = createAction('auth/userLogOutSuccess');\r\nexport const userLogOutError = createAction('auth/userLogOutError');\r\n\r\nexport const userRefreshRequest = createAction('auth/userRefreshRequest');\r\nexport const userRefreshSuccess = createAction('auth/userRefreshSuccess');\r\nexport const userRefreshError = createAction('auth/userRefreshError');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  userLoginSuccess,\r\n  userLogOutSuccess,\r\n  userRefreshError,\r\n  userRefreshSuccess,\r\n  userRegisterSuccess,\r\n} from './authActions';\r\n\r\nconst iS = {\r\n  token: null,\r\n  user: {\r\n    email: '',\r\n    name: '',\r\n  },\r\n};\r\n\r\nconst userReducer = createReducer(iS, {\r\n  [userRegisterSuccess]: (_, { payload }) => payload,\r\n  [userLoginSuccess]: (_, { payload }) => payload,\r\n  [userLogOutSuccess]: () => iS,\r\n  [userRefreshSuccess]: (state, { payload }) => ({ ...state, user: payload }),\r\n  [userRefreshError]: () => iS,\r\n});\r\n\r\nconst isAuthReducer = createReducer(false, {\r\n  [userRegisterSuccess]: () => true,\r\n  [userLoginSuccess]: () => true,\r\n  [userLogOutSuccess]: () => false,\r\n  [userRefreshSuccess]: () => true,\r\n  [userRefreshError]: () => false,\r\n});\r\n\r\nconst userPersistConfig = {\r\n  key: 'token',\r\n  version: 1,\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst persistedUserReducer = persistReducer(userPersistConfig, userReducer);\r\n\r\nconst authReducer = combineReducers({\r\n  user: persistedUserReducer,\r\n  isAuth: isAuthReducer,\r\n});\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport contactsReducer from '../redux/contacts/contactsReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport store from '../../redux/store';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://connections-api.herokuapp.com/',\r\n});\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = ``;\r\n  },\r\n};\r\n\r\nexport const fetchAllContacts = async () => {\r\n  const { data } = await instance.get('/contacts');\r\n  console.log(data);\r\n  return data;\r\n};\r\n\r\nexport const fetchAddContact = async contact => {\r\n  const { data } = await instance.post('/contacts', contact);\r\n  return data;\r\n};\r\n\r\nexport const fetchRemoveContact = async id => {\r\n  const { data } = await instance.delete(`/contacts/${id}`);\r\n  return data;\r\n};\r\nexport const fetchGetCurrent = async () => {\r\n  const { data } = await instance.get('/users/current');\r\n  const state = store.getState();\r\n  token.set(state.auth.user.token);\r\n  return data;\r\n};\r\n\r\nexport const fetchPostSignup = async user => {\r\n  const { data } = await instance.post('/users/signup', user);\r\n  token.set(data.token);\r\n  return data;\r\n};\r\nexport const fetchPostLogin = async user => {\r\n  const { data } = await instance.post('/users/login', user);\r\n  token.set(data.token);\r\n  return data;\r\n};\r\nexport const fetchPostLogout = async user => {\r\n  const { data } = await instance.post('/users/logout', user);\r\n  token.unset();\r\n  return data;\r\n};\r\n\r\nexport default {\r\n  fetchAllContacts,\r\n  fetchAddContact,\r\n  fetchRemoveContact,\r\n  fetchGetCurrent,\r\n  fetchPostSignup,\r\n  fetchPostLogin,\r\n  fetchPostLogout,\r\n};\r\n","import api from '../../shared/services/api';\r\nimport {\r\n  getContactSuccess,\r\n  getContactError,\r\n  getContactRequest,\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from './contactsActions';\r\n\r\nexport const getContact = () => {\r\n  const actionFunc = async dispatch => {\r\n    dispatch(getContactRequest());\r\n\r\n    try {\r\n      const data = await api.fetchAllContacts();\r\n      dispatch(getContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport const addContact = data => {\r\n  const actionFunc = async dispatch => {\r\n    dispatch(addContactRequest());\r\n    try {\r\n      const newContact = await api.fetchAddContact(data);\r\n      dispatch(addContactSuccess(newContact));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport const removeContact = id => {\r\n  const actionFunc = async dispatch => {\r\n    dispatch(removeContactRequest());\r\n    try {\r\n      const contactId = await api.fetchRemoveContact(id);\r\n\r\n      dispatch(removeContactSuccess(id));\r\n    } catch (error) {\r\n      dispatch(removeContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport default {\r\n  getContact,\r\n  addContact,\r\n  removeContact,\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { removeContact } from '../../../redux/contacts/contactsOperations';\r\n\r\nexport const ContactList = () => {\r\n  const items = useSelector(state => state.contacts.items.items);\r\n  const filter = useSelector(state => state.contacts.items.filter);\r\n\r\n  const filterContacts = e => {\r\n    return items.filter(e => e.name.toLowerCase().includes(filter));\r\n  };\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {filterContacts && (\r\n        <>\r\n          <h3>Contacts</h3>\r\n          <ul>\r\n            {filterContacts().map(e => (\r\n              <li key={e.id}>\r\n                {e.name} : {e.number}\r\n                <button onClick={() => dispatch(removeContact(e.id))}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","const fields = {\r\n  name: {\r\n    type: 'text',\r\n    name: 'name',\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n    required: true,\r\n  },\r\n  number: {\r\n    type: 'tel',\r\n    name: 'number',\r\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\r\n    title:\r\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\r\n    required: true,\r\n  },\r\n};\r\nexport default fields;\r\n","import { useEffect, useState } from 'react';\r\nimport { v4 as generate } from 'uuid';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  addContact,\r\n  getContact,\r\n} from '../../../redux/contacts/contactsOperations';\r\nimport fields from './fields';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst InputForm = () => {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(state => state.contacts.items.items);\r\n  console.log(items);\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getContact());\r\n  }, []);\r\n  const handleChange = ({ target }) => {\r\n    setState({ ...state, [target.name]: target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n\r\n    const newName = items.map(e => e.name);\r\n    if (newName.includes(e.target.name.value)) {\r\n      return alert(`${e.target.name.value} says hello from chat`);\r\n    }\r\n    const singleContact = {\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(addContact(singleContact));\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Phonebook</h1>\r\n        <h2>Name</h2>\r\n        <input {...fields.name} onChange={handleChange} />\r\n        <h2>Number</h2>\r\n        <input {...fields.number} onChange={handleChange} />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","export const fields = {\r\n  email: {\r\n    name: 'email',\r\n    type: 'email',\r\n    placeholder: 'Enter email',\r\n    required: true,\r\n  },\r\n  password: {\r\n    name: 'password',\r\n    type: 'password',\r\n    placeholder: 'Enter password',\r\n    required: true,\r\n  },\r\n};\r\n","export const initialState = {\r\n  email: '',\r\n  password: '',\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userLogin } from '../../redux/auth/authOperations';\r\nimport { fields } from './fields';\r\nimport { initialState } from './initialState';\r\nimport styles from './LoginForm.module.css';\r\n\r\nconst LoginForm = () => {\r\n  const [data, setData] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleUserAuth = dataUser => {\r\n    dispatch(userLogin(dataUser));\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleUserAuth(data);\r\n    setData({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <div>\r\n          <input {...fields.email} value={data.email} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <input\r\n            {...fields.password}\r\n            value={data.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import {\r\n  fetchPostLogin,\r\n  fetchPostLogout,\r\n  fetchGetCurrent,\r\n  fetchPostSignup,\r\n} from '../../shared/services/api';\r\nimport {\r\n  userRegisterRequest,\r\n  userRegisterSuccess,\r\n  userRegisterError,\r\n  userLoginRequest,\r\n  userLoginSuccess,\r\n  userLoginError,\r\n  userLogOutRequest,\r\n  userLogOutSuccess,\r\n  userLogOutError,\r\n  userRefreshRequest,\r\n  userRefreshSuccess,\r\n  userRefreshError,\r\n} from './authActions';\r\n\r\nexport const userRegister = userData => dispatch => {\r\n  dispatch(userRegisterRequest());\r\n\r\n  fetchPostSignup(userData)\r\n    .then(data => dispatch(userRegisterSuccess(data)))\r\n    .catch(err => dispatch(userRegisterError(err.message)));\r\n};\r\n\r\nexport const userLogin = userData => dispatch => {\r\n  dispatch(userLoginRequest());\r\n\r\n  fetchPostLogin(userData)\r\n    .then(data => dispatch(userLoginSuccess(data)))\r\n    .catch(err => dispatch(userLoginError(err.message)));\r\n};\r\n\r\nexport const userLogOut = () => (dispatch, getState) => {\r\n  dispatch(userLogOutRequest());\r\n\r\n  const {\r\n    auth: {\r\n      user: { token },\r\n    },\r\n  } = getState();\r\n\r\n  fetchPostLogout(token)\r\n    .then(() => dispatch(userLogOutSuccess()))\r\n    .catch(err => dispatch(userLogOutError(err.message)));\r\n};\r\n\r\nexport const userRefresh = () => (dispatch, getState) => {\r\n  dispatch(userRefreshRequest());\r\n\r\n  const {\r\n    auth: {\r\n      user: { token },\r\n    },\r\n  } = getState();\r\n\r\n  fetchGetCurrent(token)\r\n    .then(data => dispatch(userRefreshSuccess(data)))\r\n    .catch(err => dispatch(userRefreshError(err.message)));\r\n};\r\n","export const fields = {\r\n  email: {\r\n    name: 'email',\r\n    type: 'email',\r\n    placeholder: 'Enter email',\r\n    required: true,\r\n  },\r\n  password: {\r\n    name: 'password',\r\n    type: 'password',\r\n    placeholder: 'Enter password',\r\n    required: true,\r\n  },\r\n  name: {\r\n    name: 'name',\r\n    type: 'text',\r\n    placeholder: 'Enter name',\r\n    required: true,\r\n  },\r\n};\r\n","export const initialState = {\r\n  email: '',\r\n  password: '',\r\n  name: '',\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userRegister } from '../../redux/auth/authOperations';\r\n\r\nimport { fields } from './fields';\r\nimport { initialState } from './initialState';\r\n\r\nimport styles from './RegisterForm.module.css';\r\n\r\nconst RegisterForm = () => {\r\n  const [data, setData] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleUserAuth = dataUser => {\r\n    dispatch(userRegister(dataUser));\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleUserAuth(data);\r\n    setData({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <div>\r\n          <input {...fields.email} value={data.email} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <input\r\n            {...fields.password}\r\n            value={data.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input {...fields.name} value={data.name} onChange={handleChange} />\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport { ContactList } from './components/InputForm/ContactList/ContactList';\r\nimport InputForm from './components/InputForm/inputForm/InputForm';\r\nimport LoginForm from './components/LoginForm/LoginForm';\r\nimport RegisterForm from './components/RegisterForm/RegisterForm';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <LoginForm />\r\n      </Route>\r\n      <Route exact path=\"/register\">\r\n        <RegisterForm />\r\n      </Route>\r\n      <Route exact path=\"/contacts\">\r\n        <InputForm />\r\n        <ContactList />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { nanoid } from 'nanoid';\r\n\r\nexport const items = [\r\n  {\r\n    id: nanoid(),\r\n    to: '/',\r\n    text: 'HomePage',\r\n  },\r\n  {\r\n    id: nanoid(),\r\n    to: '/register',\r\n    text: 'Register page',\r\n  },\r\n  {\r\n    id: nanoid(),\r\n    to: '/contacts',\r\n    text: 'Phonebook Page',\r\n  },\r\n];\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './NavbarMenu.module.css';\r\n\r\nimport { items } from './items';\r\n\r\nconst NavbarMenu = () => {\r\n  const menuElements = items.map(({ id, to, text }) => (\r\n    <li key={id}>\r\n      <NavLink\r\n        exact\r\n        activeClassName={styles.activeLink}\r\n        className={styles.link}\r\n        to={to}\r\n      >\r\n        {text}\r\n      </NavLink>\r\n    </li>\r\n  ));\r\n\r\n  return <ul className={styles.menu}>{menuElements}</ul>;\r\n};\r\n\r\nexport default NavbarMenu;\r\n","import NavbarMenu from './NavbarMenu/NavbarMenu';\r\n\r\nimport styles from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"container\">\r\n        <div className={styles.row}>\r\n          <NavbarMenu />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport Navbar from './components/Navbar/Navbar';\r\n\r\nstore.getState();\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Navbar />\r\n          <Routes />\r\n        </Router>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}