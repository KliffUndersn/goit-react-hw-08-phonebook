{"version":3,"sources":["shared/services/contacts.js","redux/actions.js","redux/operations.js","components/InputForm/ContactList/ContactList.js","components/InputForm/FilterContacts/FilterContacts.js","components/InputForm/inputForm/fields.js","components/InputForm/inputForm/InputForm.js","components/InputForm/contactForm.js","redux/store.js","App.js","index.js"],"names":["instance","axios","create","baseURL","fetchAllContacts","a","get","data","fetchAddContact","contact","post","fetchRemoveContact","id","delete","filterContact","createAction","getContactRequest","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","getContact","actionFunc","dispatch","api","addContact","newContact","removeContact","ContactList","items","useSelector","state","filter","filterContacts","e","console","log","name","toLowerCase","includes","useDispatch","map","number","onClick","FilterContacts","type","placeholder","onChange","target","value","fields","pattern","title","required","InputForm","useState","setState","useEffect","handleChange","onSubmit","preventDefault","newName","alert","singleContact","generate","ContactForm","reducer","createReducer","action","payload","store","configureStore","getState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a05cc1ed.chunk.js","sourcesContent":["import axios from 'axios';\r\n// my-json-server.typicode.com/KliffUndersn/goit-react-hw-07-phonebook\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:3001/contacts/',\r\n});\r\n\r\nexport const fetchAllContacts = async () => {\r\n  const { data } = await instance.get('/');\r\n  return data;\r\n};\r\n\r\nexport const fetchAddContact = async contact => {\r\n  const { data } = await instance.post('/', contact);\r\n  return data;\r\n};\r\n\r\nexport const fetchRemoveContact = async id => {\r\n  const { data } = await instance.delete(`/${id}`);\r\n  return data;\r\n};\r\n\r\nexport default {\r\n  fetchAllContacts,\r\n  fetchAddContact,\r\n  fetchRemoveContact,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const deleteContact = createAction('contacts/delete');\r\n// export const addContact = createAction('contacts/add');\r\nexport const filterContact = createAction('contacts/filter');\r\n\r\nexport const getContactRequest = createAction('contacts/getRequest');\r\nexport const getContactSuccess = createAction('contacts/getSuccess');\r\nexport const getContactError = createAction('contacts/getError');\r\n\r\nexport const addContactRequest = createAction('contacts/addRequest');\r\nexport const addContactSuccess = createAction('contacts/addSuccess');\r\nexport const addContactError = createAction('contacts/addError');\r\n\r\nexport const removeContactRequest = createAction('contacts/removeRequest');\r\nexport const removeContactSuccess = createAction('contacts/removeSuccess');\r\nexport const removeContactError = createAction('contacts/removeError');\r\n","import api from '../shared/services/contacts';\r\nimport {\r\n  getContactSuccess,\r\n  getContactError,\r\n  getContactRequest,\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from './actions';\r\n\r\nexport const getContact = () => {\r\n  const actionFunc = async dispatch => {\r\n    dispatch(getContactRequest());\r\n\r\n    try {\r\n      const data = await api.fetchAllContacts();\r\n      dispatch(getContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport const addContact = data => {\r\n  const actionFunc = async dispatch => {\r\n    dispatch(addContactRequest());\r\n    try {\r\n      const newContact = await api.fetchAddContact(data);\r\n      dispatch(addContactSuccess(newContact));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport const removeContact = id => {\r\n  const actionFunc = async dispatch => {\r\n    dispatch(removeContactRequest());\r\n    try {\r\n      const contactId = await api.fetchRemoveContact(id);\r\n\r\n      dispatch(removeContactSuccess(id));\r\n    } catch (error) {\r\n      dispatch(removeContactError(error));\r\n    }\r\n  };\r\n\r\n  return actionFunc;\r\n};\r\n\r\nexport default {\r\n  getContact,\r\n  addContact,\r\n  removeContact,\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { removeContact, getContact } from '../../../redux/operations';\r\n\r\nexport const ContactList = () => {\r\n  const items = useSelector(state => state.items);\r\n  const filter = useSelector(state => state.filter);\r\n  // console.log(items);\r\n\r\n  const filterContacts = e => {\r\n    console.log(items);\r\n    return items.filter(e => e.name.toLowerCase().includes(filter));\r\n  };\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {filterContacts && (\r\n        <>\r\n          <h3>Contacts</h3>\r\n          <ul>\r\n            {filterContacts().map(e => (\r\n              <li key={e.id}>\r\n                {e.name} : {e.number}\r\n                <button onClick={() => dispatch(removeContact(e.id))}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../../redux/actions';\r\n\r\nexport const FilterContacts = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <h2>Find contacts by name</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"start typing\"\r\n        onChange={({ target }) => dispatch(filterContact(target.value))}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilterContacts.propTypes = {\r\n  filtered: PropTypes.func.isRequired,\r\n};\r\n","const fields = {\r\n  name: {\r\n    type: 'text',\r\n    name: 'name',\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n    required: true,\r\n  },\r\n  number: {\r\n    type: 'tel',\r\n    name: 'number',\r\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\r\n    title:\r\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\r\n    required: true,\r\n  },\r\n};\r\nexport default fields;\r\n","import { useEffect, useState } from 'react';\r\nimport { v4 as generate } from 'uuid';\r\nimport { useSelector } from 'react-redux';\r\nimport { addContact, getContact } from '../../../redux/operations';\r\nimport fields from './fields';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst InputForm = () => {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(state => state.items);\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getContact());\r\n  }, []);\r\n  const handleChange = ({ target }) => {\r\n    setState({ ...state, [target.name]: target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n\r\n    const newName = items.map(e => e.name);\r\n    if (newName.includes(e.target.name.value)) {\r\n      return alert(`${e.target.name.value} says hello from chat`);\r\n    }\r\n    const singleContact = {\r\n      id: generate(),\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(addContact(singleContact));\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Phonebook</h1>\r\n        <h2>Name</h2>\r\n        <input {...fields.name} onChange={handleChange} />\r\n        <h2>Number</h2>\r\n        <input {...fields.number} onChange={handleChange} />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import { ContactList } from './ContactList/ContactList';\r\nimport { FilterContacts } from './FilterContacts/FilterContacts';\r\nimport InputForm from './inputForm/InputForm';\r\n\r\nconst ContactForm = () => {\r\n  return (\r\n    <>\r\n      <InputForm />\r\n      <FilterContacts />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { configureStore, createReducer } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  filterContact,\r\n} from './actions';\r\n\r\nconst initialStore = {\r\n  filter: '',\r\n  items: [],\r\n};\r\n\r\nconst reducer = createReducer(initialStore, {\r\n  [getContactSuccess]: (state, action) => {\r\n    console.log(action.payload);\r\n    return { filter: '', items: action.payload };\r\n  },\r\n  [addContactSuccess]: (state, action) => {\r\n    console.log(action.payload);\r\n    return { filter: state.filter, items: [...state.items, action.payload] };\r\n  },\r\n  [removeContactSuccess]: (state, action) => {\r\n    console.log(action.payload);\r\n    return {\r\n      filter: state.filter,\r\n      items: state.items.filter(e => e.id !== action.payload),\r\n    };\r\n  },\r\n  [filterContact]: (state, action) => {\r\n    return { filter: action.payload, items: [...state.items] };\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport InputForm from './components/InputForm/contactForm';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nstore.getState();\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <InputForm />\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}